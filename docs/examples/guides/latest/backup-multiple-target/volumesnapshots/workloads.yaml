apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: stash-demo1
  name: stash-demo1
  namespace: demo
spec:
  replicas: 3
  selector:
    matchLabels:
      app: stash-demo1
  template:
    metadata:
      labels:
        app: stash-demo1
      name: busybox
    spec:
      containers:
        - args: ["echo sample_data > /source/data/data.txt; echo sample_config > /source/config/config.cfg  && sleep 3000"]
          command: ["/bin/sh", "-c"]
          image: busybox
          imagePullPolicy: IfNotPresent
          name: busybox
          volumeMounts:
            - mountPath: /source/data
              name: source-data
            - mountPath: /source/config
              name: source-config
      restartPolicy: Always
      volumes:
        - name: source-data
          persistentVolumeClaim:
            claimName: source-data
        - name: source-config
          persistentVolumeClaim:
            claimName: source-config
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: source-data
  namespace: demo
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: csi-hostpath-sc
  resources:
    requests:
      storage: 1Gi
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: source-config
  namespace: demo
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: csi-hostpath-sc
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: svc
  labels:
    app: demo
  namespace: demo
spec:
  ports:
    - port: 80
      name: web
  clusterIP: None
  selector:
    app: stash
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: stash-demo
  namespace: demo
spec:
  selector:
    matchLabels:
      app: stash
  serviceName: svc
  replicas: 3
  template:
    metadata:
      labels:
        app: stash
    spec:
      containers:
        - args: ["echo $(POD_NAME) > /source/data/data.txt && sleep 3000"]
          command: ["/bin/sh", "-c"]
          env:
            - name:  POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath:  metadata.name
          name: nginx
          image: nginx
          ports:
            - containerPort: 80
              name: web
          volumeMounts:
            - name: source-data
              mountPath: /source/data
  volumeClaimTemplates:
    - metadata:
        name: source-data
        namespace: demo
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: csi-hostpath-sc
        resources:
          requests:
            storage: 1Gi