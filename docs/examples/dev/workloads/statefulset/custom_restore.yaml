apiVersion: stash.appscode.com/v1beta1
kind: RestoreSession
metadata:
  name: ss-custom-restore
  namespace: demo
spec:
  repository:
    name: local-repo
  rules:
  - targetHosts: ["host-3","host-4"] # "host-3" and "host-4" will have restored data of backed up host "host-1"
    sourceHost: "host-1" # source host
    paths:
    - /source/data
  - targetHosts: [] # empty host match all hosts
    sourceHost: "" # no source host indicates that the host is pod itself
    paths:
    - /source/data
  target: # target indicates where the recovered data will be stored
    ref:
      apiVersion: apps/v1
      kind: StatefulSet
      name: scaled-up-stash-demo
    volumeMounts:
    - name:  source-data
      mountPath:  /source/data
---
apiVersion: v1
kind: Service
metadata:
  name: headless
  namespace: demo
spec:
  ports:
    - name: http
      port: 80
      targetPort: 0
  selector:
    app: stash-demo
  clusterIP: None
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: scaled-up-stash-demo
  namespace: demo
  labels:
    app: stash-demo
spec:
  replicas: 5
  selector:
    matchLabels:
      app: stash-demo
  serviceName: headless
  template:
    metadata:
      labels:
        app: stash-demo
    spec:
      containers:
      - name: busybox
        image: busybox
        command:
        - sleep
        - '3600'
        volumeMounts:
        - name: source-data
          mountPath: "/source/data"
        imagePullPolicy: IfNotPresent
  volumeClaimTemplates:
  - metadata:
      name: source-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "standard"
      resources:
        requests:
          storage: 1Gi
