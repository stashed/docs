apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-pv-claim
  namespace: demo
  labels:
    app: minio-storage-claim
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: minio-deployment
  namespace: demo
spec:
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: minio
    spec:
      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: minio-pv-claim
      containers:
      - name: minio
        image: minio/minio
        args:
        - server
        - /storage
        env:
        - name: MINIO_ACCESS_KEY
          value: "myaccesskey"
        - name: MINIO_SECRET_KEY
          value: "mysecretkey"
        ports:
        - containerPort: 9000
        volumeMounts:
        - name: storage
          mountPath: "/storage"
---
apiVersion: v1
kind: Service
metadata:
  name: minio-service
  namespace: demo
spec:
  ports:
    - port: 9000
      targetPort: 9000
      protocol: TCP
  selector:
    app: minio
---
apiVersion: v1
kind: Secret
metadata:
  name: minio-secret
  namespace: demo
data:
  RESTIC_PASSWORD: ZGVtbw==
  AWS_ACCESS_KEY_ID: bXlhY2Nlc3NrZXk=
  AWS_SECRET_ACCESS_KEY: bXlzZWNyZXRrZXk=
type: Opaque
---
apiVersion: stash.appscode.com/v1alpha1
kind: Repository
metadata:
  name: minio-repo
  namespace: demo
spec:
  backend:
    s3:
      endpoint: 'http://minio-service.demo.svc:9000'
      bucket: stash-repo
      prefix: demo
    storageSecretName: minio-secret
